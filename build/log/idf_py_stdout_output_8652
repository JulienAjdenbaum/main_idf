Command: ninja all
[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/adpcm_ima.c.obj
[2/9] Performing build step for 'bootloader'
[1/1] cd /home/julien/Documents/esp32IDF/hello_world/build/bootloader/esp-idf/esptool_py && /home/julien/.espressif/python_env/idf5.5_py3.10_env/bin/python /home/julien/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/julien/Documents/esp32IDF/hello_world/build/bootloader/bootloader.bin
Bootloader binary size 0x6650 bytes. 0x9b0 bytes (9%) free.
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable hello_world.elf
[6/7] Generating binary image from built executable
esptool.py v4.9.dev6
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/julien/Documents/esp32IDF/hello_world/build/hello_world.bin
[7/7] cd /home/julien/Documents/esp32IDF/hello_world/build/esp-idf/esptool_py && /home/julien/.espressif/python_env/idf5.5_py3.10_env/bin/python /home/julien/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/julien/Documents/esp32IDF/hello_world/build/partition_table/partition-table.bin /home/julien/Documents/esp32IDF/hello_world/build/hello_world.bin
hello_world.bin binary size 0x100b90 bytes. Smallest app partition is 0x101000 bytes. 0x470 bytes (0%) free.
Warning: The smallest app partition is nearly full (0% free space left)!
